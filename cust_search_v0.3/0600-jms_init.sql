CREATE USER BT_JMSADMIN IDENTIFIED BY BT_JMSADMIN DEFAULT TABLESPACE users;
GRANT CONNECT TO BT_JMSADMIN;
GRANT CREATE TYPE TO BT_JMSADMIN;
GRANT aq_administrator_role TO BT_JMSADMIN;
GRANT CREATE any TRIGGER to BT_JMSADMIN;
GRANT CREATE PROCEDURE TO BT_JMSADMIN;
GRANT EXECUTE ON SYS.DBMS_AQ to BT_JMSADMIN;

GRANT SELECT ON BT_OWNER.BT_CUST TO BT_JMSADMIN;
GRANT SELECT ON BT_OWNER.BT_CUST_Z TO BT_JMSADMIN;
GRANT SELECT ON BT_OWNER.BT_CUST_P TO BT_JMSADMIN;
GRANT SELECT ON MD_CUST_OWNER.CUST TO BT_JMSADMIN;
GRANT SELECT ON MD_CUST_OWNER.CUST_ADDRESS_PLACE TO BT_JMSADMIN;
GRANT SELECT ON MD_CUST_OWNER.CUST_NOM TO BT_JMSADMIN;
GRANT SELECT ON MD_CUST_OWNER.CUST_ACQ TO BT_JMSADMIN;

ALTER USER BT_JMSADMIN QUOTA UNLIMITED ON users;

CREATE USER BT_JMSUSER identified by BT_JMSUSER;
GRANT CREATE SESSION to BT_JMSUSER;
GRANT aq_user_role TO BT_JMSUSER;

connect BT_JMSADMIN/BT_JMSADMIN

EXECUTE DBMS_AQADM.CREATE_QUEUE_TABLE (queue_table => 'BT_JMSADMIN.jms_btn_cust_search_qtbl', queue_payload_type => 'SYS.AQ$_JMS_TEXT_MESSAGE');
EXECUTE DBMS_AQADM.CREATE_QUEUE (queue_name => 'BT_JMSADMIN.jms_cust_search_queue', queue_table => 'BT_JMSADMIN.jms_btn_cust_search_qtbl');
EXECUTE DBMS_AQADM.START_QUEUE (Queue_name => 'BT_JMSADMIN.jms_cust_search_queue');
EXECUTE DBMS_AQADM.grant_queue_privilege (privilege => 'ALL', queue_name => 'BT_JMSADMIN.jms_cust_search_queue', grantee => 'BT_JMSUSER', grant_option => FALSE);


-- package definition

CREATE OR REPLACE PACKAGE "BT_JMSADMIN"."BT_CUST_SEARCH_PKG" AS
  VER_S VARCHAR2(10) := '1.00';

  PROCEDURE sync_search_btc(
    operation IN VARCHAR2,
    new_bt_cust_id IN BT_OWNER.BT_CUST.ID%TYPE,
    new_store_no IN BT_OWNER.BT_CUST.STORE_NO%TYPE,
    new_cust_record_type IN BT_OWNER.BT_CUST.CUST_RECORD_TYPE%TYPE,
    new_card_type IN BT_OWNER.BT_CUST.CARD_TYPE%TYPE,
    new_cust_status IN BT_OWNER.BT_CUST.CUST_STATUS%TYPE,
    new_place_status IN BT_OWNER.BT_CUST.PLACE_STATUS%TYPE,
    new_cust_no IN BT_OWNER.BT_CUST.CUST_NO%TYPE,
    new_place_no IN BT_OWNER.BT_CUST.PLACE_NO%TYPE,
    old_bt_cust_id IN BT_OWNER.BT_CUST.ID%TYPE,
    old_store_no IN BT_OWNER.BT_CUST.STORE_NO%TYPE,
    old_cust_record_type IN BT_OWNER.BT_CUST.CUST_RECORD_TYPE%TYPE,
    old_card_type IN BT_OWNER.BT_CUST.CARD_TYPE%TYPE,
    old_cust_status IN BT_OWNER.BT_CUST.CUST_STATUS%TYPE,
    old_place_status IN BT_OWNER.BT_CUST.PLACE_STATUS%TYPE,
    old_cust_no IN BT_OWNER.BT_CUST.CUST_NO%TYPE,
    old_place_no IN BT_OWNER.BT_CUST.PLACE_NO%TYPE);

  PROCEDURE sync_search_mdcap(
    operation IN VARCHAR2,
    new_bt_cust_id IN MD_CUST_OWNER.CUST_ADDRESS_PLACE.CUST_ID%TYPE,
    new_place_town IN MD_CUST_OWNER.CUST_ADDRESS_PLACE.TOWN%TYPE,
    new_place_address IN MD_CUST_OWNER.CUST_ADDRESS_PLACE.ADDRESS%TYPE,
    new_place_post_cd IN MD_CUST_OWNER.CUST_ADDRESS_PLACE.POST_CD_ADDR%TYPE,
    old_bt_cust_id IN MD_CUST_OWNER.CUST_ADDRESS_PLACE.CUST_ID%TYPE,
    old_place_town IN MD_CUST_OWNER.CUST_ADDRESS_PLACE.TOWN%TYPE,
    old_place_address IN MD_CUST_OWNER.CUST_ADDRESS_PLACE.ADDRESS%TYPE,
    old_place_post_cd IN MD_CUST_OWNER.CUST_ADDRESS_PLACE.POST_CD_ADDR%TYPE);

  PROCEDURE sync_search_btcp(
    operation IN VARCHAR2,
    new_bt_cust_id IN BT_OWNER.BT_CUST_P.BT_CUST_ID%TYPE,
    new_store_no IN BT_OWNER.BT_CUST_P.STORE_NO%TYPE,
    new_cust_no IN BT_OWNER.BT_CUST_P.CUST_NO%TYPE,
    new_place_name IN BT_OWNER.BT_CUST_P.NAME%TYPE,
    old_bt_cust_id IN BT_OWNER.BT_CUST_P.BT_CUST_ID%TYPE,
    old_place_name IN BT_OWNER.BT_CUST_P.NAME%TYPE);

  PROCEDURE sync_search_mdcn(
    operation IN VARCHAR2,
    new_bt_cust_id IN MD_CUST_OWNER.CUST_NOM.BT_CUST_ID%TYPE,
    new_place_name IN MD_CUST_OWNER.CUST_NOM.NAME%TYPE,
    old_bt_cust_id IN MD_CUST_OWNER.CUST_NOM.BT_CUST_ID%TYPE,
    old_place_name IN MD_CUST_OWNER.CUST_NOM.NAME%TYPE);

  PROCEDURE sync_search_mdc(
    operation IN VARCHAR2,
    new_bt_cust_id IN MD_CUST_OWNER.CUST.CUST_ID%TYPE,
    new_store_no IN MD_CUST_OWNER.CUST.STORE_NO%TYPE,
    new_cust_no IN MD_CUST_OWNER.CUST.CUST_NO%TYPE,
    new_cust_reg_no IN MD_CUST_OWNER.CUST.CUST_REG_NO%TYPE,
    old_bt_cust_id IN MD_CUST_OWNER.CUST.CUST_ID%TYPE,
    old_cust_reg_no IN MD_CUST_OWNER.CUST.CUST_REG_NO%TYPE);

  PROCEDURE sync_search_mdca(
    operation IN VARCHAR2,
    new_bt_cust_id IN MD_CUST_OWNER.CUST_ACQ.BT_CUST_ID%TYPE,
    new_cust_full_name IN MD_CUST_OWNER.CUST_ACQ.CUST_FULL_NAME%TYPE,
    new_place_name IN MD_CUST_OWNER.CUST_ACQ.NAME%TYPE,
    new_place_town IN MD_CUST_OWNER.CUST_ACQ.TOWN%TYPE,
    new_place_address IN MD_CUST_OWNER.CUST_ACQ.ADDRESS%TYPE,
    new_place_post_cd IN MD_CUST_OWNER.CUST_ACQ.POST_CD%TYPE,
    new_cust_reg_no IN MD_CUST_OWNER.CUST_ACQ.CUST_REG_NO%TYPE,
    old_bt_cust_id IN MD_CUST_OWNER.CUST_ACQ.BT_CUST_ID%TYPE,
    old_cust_full_name IN MD_CUST_OWNER.CUST_ACQ.CUST_FULL_NAME%TYPE,
    old_place_name IN MD_CUST_OWNER.CUST_ACQ.NAME%TYPE,
    old_place_town IN MD_CUST_OWNER.CUST_ACQ.TOWN%TYPE,
    old_place_address IN MD_CUST_OWNER.CUST_ACQ.ADDRESS%TYPE,
    old_place_post_cd IN MD_CUST_OWNER.CUST_ACQ.POST_CD%TYPE,
    old_cust_reg_no IN MD_CUST_OWNER.CUST_ACQ.CUST_REG_NO%TYPE);

  PROCEDURE sync_search_btcz(
    operation IN VARCHAR2,
    new_bt_cust_id IN BT_OWNER.BT_CUST_Z.BT_CUST_ID%TYPE,
    new_store_no IN BT_OWNER.BT_CUST_Z.STORE_NO%TYPE,
    new_cust_no IN BT_OWNER.BT_CUST_Z.CUST_NO%TYPE,
    new_cust_full_name IN BT_OWNER.BT_CUST_Z.CUST_FULL_NAME%TYPE,
    old_bt_cust_id IN BT_OWNER.BT_CUST_Z.BT_CUST_ID%TYPE,
    old_cust_full_name IN BT_OWNER.BT_CUST_Z.CUST_FULL_NAME%TYPE);

END BT_CUST_SEARCH_PKG;
/
